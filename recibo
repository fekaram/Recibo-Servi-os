<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gerador de Recibo de Prestação de Serviço</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f8f9fa;
    }
    h1 {
      text-align: center;
      padding: 20px;
      background-color: #007bff;
      color: white;
      margin-bottom: 0;
    }
    form {
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      max-width: 900px;
      margin: auto;
    }
    label {
      display: block;
      margin-top: 10px;
      font-weight: bold;
    }
    input, select, button {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }
    button {
      background-color: #007bff;
      color: white;
      border: none;
      cursor: pointer;
      font-weight: bold;
      margin-top: 20px;
    }
    button:hover {
      background-color: #0056b3;
    }
    .grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 20px;
    }
    @media (max-width: 600px) {
      h1 {
        font-size: 20px;
      }
      button {
        font-size: 16px;
      }
    }
  </style>
</head>
<body>
  <h1>Recibo de Prestação de Serviço</h1>
  <form id="form">
    <div class="grid">
      <div>
        <label>Valor: <input type="number" step="0.01" id="valor" required></label>
        <label>Nº Recibo: <input type="text" id="numero"></label>
        <label>Pagador: <input type="text" id="pagador" required></label>
        <label>CPF do Pagador: <input type="text" id="cpfPagador"></label>
        <label>Referente a: <input type="text" id="referente"></label>
        <label>Cidade de Emissão: <input type="text" id="cidade" required></label>
        <label>Data do Pagamento: <input type="date" id="data" required></label>
      </div>
      <div>
        <label>Prestador de Serviço:
          <select id="prestadorSelect">
            <option value="">Novo Prestador</option>
          </select>
        </label>
        <label>Nome: <input type="text" id="prestador" required></label>
        <label>CPF/CNPJ Prestador: <input type="text" id="cpfPrestador"></label>
        <label>CEP: <input type="text" id="cep"></label>
        <label>Endereço: <input type="text" id="endereco"></label>
        <label>Número: <input type="text" id="numeroEndereco"></label>
        <label>Bairro: <input type="text" id="bairro"></label>
        <label>Complemento: <input type="text" id="complemento"></label>
        <label>Cidade: <input type="text" id="cidadePrestador"></label>
        <label>UF: <input type="text" id="uf"></label>
      </div>
    </div>
    <button type="submit">Gerar Recibo</button>
  </form>

  <script>
    const prestadorSelect = document.getElementById('prestadorSelect');
    const dataInput = document.getElementById('data');
    const numeroInput = document.getElementById('numero');

    const hoje = new Date().toISOString().split('T')[0];
    dataInput.value = hoje;

    const proximoNumero = parseInt(localStorage.getItem('ultimoRecibo') || '0') + 1;
    numeroInput.value = proximoNumero;

    function numeroPorExtenso(valor) {
      return `R$ ${valor.toFixed(2)}`;
    }

    function salvarPrestador(data) {
      let prestadores = JSON.parse(localStorage.getItem('prestadores') || '{}');
      prestadores[data.prestador] = data;
      localStorage.setItem('prestadores', JSON.stringify(prestadores));
      atualizarSelectPrestadores();
    }

    function salvarRecibo(recibo) {
      let recibos = JSON.parse(localStorage.getItem('recibos') || '[]');
      recibo.timestamp = new Date().toISOString();
      recibos.push(recibo);
      localStorage.setItem('recibos', JSON.stringify(recibos));
    }

    function atualizarSelectPrestadores() {
      const prestadores = JSON.parse(localStorage.getItem('prestadores') || '{}');
      prestadorSelect.innerHTML = '<option value="">Novo Prestador</option>';
      Object.keys(prestadores).forEach(nome => {
        const option = document.createElement('option');
        option.value = nome;
        option.textContent = nome;
        prestadorSelect.appendChild(option);
      });
    }

    prestadorSelect.addEventListener('change', () => {
      const prestadores = JSON.parse(localStorage.getItem('prestadores') || '{}');
      const selected = prestadorSelect.value;
      if (prestadores[selected]) {
        const data = prestadores[selected];
        document.getElementById('prestador').value = data.prestador;
        document.getElementById('cpfPrestador').value = data.cpfPrestador;
        document.getElementById('cep').value = data.cep;
        document.getElementById('endereco').value = data.endereco;
        document.getElementById('numeroEndereco').value = data.numeroEndereco;
        document.getElementById('bairro').value = data.bairro;
        document.getElementById('complemento').value = data.complemento;
        document.getElementById('cidadePrestador').value = data.cidadePrestador;
        document.getElementById('uf').value = data.uf;
      }
    });

    document.getElementById('cep').addEventListener('blur', async () => {
      const cep = document.getElementById('cep').value.replace(/\D/g, '');
      if (cep.length === 8) {
        const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);
        const data = await response.json();
        if (!data.erro) {
          document.getElementById('endereco').value = data.logradouro;
          document.getElementById('bairro').value = data.bairro;
          document.getElementById('cidadePrestador').value = data.localidade;
          document.getElementById('uf').value = data.uf;
        }
      }
    });

    document.getElementById('form').addEventListener('submit', async (e) => {
      e.preventDefault();

      const data = {
        valor: parseFloat(valor.value),
        numero: numeroInput.value,
        pagador: pagador.value,
        cpfPagador: cpfPagador.value,
        referente: referente.value,
        cidade: cidade.value,
        data: new Date(document.getElementById('data').value),
        prestador: prestador.value,
        cpfPrestador: cpfPrestador.value,
        cep: cep.value,
        endereco: endereco.value,
        numeroEndereco: numeroEndereco.value,
        bairro: bairro.value,
        complemento: complemento.value,
        cidadePrestador: cidadePrestador.value,
        uf: uf.value,
      };

      salvarPrestador(data);
      salvarRecibo(data);
      localStorage.setItem('ultimoRecibo', data.numero);

      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();
      doc.setFont("Helvetica", "normal");
      doc.setFontSize(14);
      doc.text("RECIBO DE PRESTAÇÃO DE SERVIÇO", 105, 20, { align: "center" });

      doc.setFontSize(12);
      doc.text(`Recibo Nº ${data.numero}`, 15, 30);
      const valorExtenso = numeroPorExtenso(data.valor);
      doc.text(`Valor: ${valorExtenso}`, 15, 40);

      const textoRecibo = `
Recebi de ${data.pagador} - CPF ${data.cpfPagador}, a quantia de ${valorExtenso}, 
referente à ${data.referente}. Para maior clareza, firmo o presente recibo, 
que comprova o recebimento integral do valor mencionado, concedendo quitação plena, 
geral e irrevogável pela quantia recebida.`;
      doc.text(textoRecibo.trim(), 15, 55, { maxWidth: 180, align: "justify" });

      doc.text(`${data.cidade}, ${data.data.toLocaleDateString('pt-BR')}`, 150, 105, { align: "right" });

      doc.line(60, 130, 150, 130);
      doc.text(`${data.prestador}`, 105, 137, { align: "center" });
      doc.text(`CPF: ${data.cpfPrestador}`, 105, 145, { align: "center" });

      doc.setFontSize(10);
      doc.text(
        `${data.endereco}, Nº ${data.numeroEndereco}, ${data.complemento || ''}\n${data.bairro} - ${data.cidadePrestador}/${data.uf} - CEP: ${data.cep}`,
        105, 160, { align: "center", maxWidth: 180 }
      );

      doc.save(`recibo-${data.numero}.pdf`);
    });

    atualizarSelectPrestadores();
  </script>
</body>
</html>
